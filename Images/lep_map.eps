%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2
%%For: (yvette) (L3)
%%Title: (632 Lep phys.Report)
%%CreationDate: (12/15/92) (15:19)
%%BoundingBox: 145 215 520 505
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%+ Helvetica-Bold
%%+ Times-Bold
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_IllustratorA_AI3 1.0 1
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 13.5 215.5 598.5 576.5
%AI3_TemplateFile: YvetteHD::2:632 scanlep
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Header
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 1.1 0
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
% [ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% [ ... number value stream ... /_Symbol/Symbol 
%	direction fontScript defaultEncoding TZ
% for blended fonts w/ default encoding :
% [ /_AdobeSans_20ULig1XCond-Bold/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
% for blended fonts w/ special encoding :
% [ ... number value stream ... /_AdobeSans_20ULig1XCond/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 2
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
% 47 vars, but leave slack of 10 entries for custom Postscript fragments
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
%%IncludeFont: Helvetica-Bold
%%IncludeFont: Times-Bold
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup
0 A
0 O
0.9 g
0 i 0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
1 0 1 0 k
148.25 292.75 m
149.0732 293.3899 149.3945 294.3653 149.6585 295.2765 c
153.4468 308.3493 162.1251 322.1834 173.5639 340.049 c
180.0559 350.1886 189.5541 357.6607 196.9792 366.9661 c
201.4668 372.5902 204.341 378.0339 208.5656 384.0275 c
214.8704 392.9723 218.6776 401.345 225.6662 409.3883 c
235.2588 420.4286 244.7823 429.7681 253.5159 441.9183 c
258.8803 449.3813 262.8125 456.7697 266.6288 464.8076 c
267.3455 466.317 267.0118 468.2105 267.8755 469.6761 c
270.7947 474.6299 273.0637 479.3563 274.7694 484.7439 c
275.3033 486.4305 276.4019 487.9252 277.8361 488.5533 c
280.5252 489.7307 282.301 491.7637 284.7548 493.242 c
287.6378 494.9788 289.465 497.4522 291.665 499.8287 c
291.92 500.1041 291.75 500.7494 291.75 501.25 c
148 501.25 l
148.25 292.75 l


f
u
0.5 R
0.5 G
3 w
0 1 0 0 k
276.3296 463.1002 m
296.0617 474.9865 314.3226 484.0771 336.4356 481.8583 c
355.6139 479.9339 379.0341 476.1723 392.322 468.9749 c
403.2886 463.035 411.2346 458.6752 420.3791 450.3205 c
442.4383 430.1668 454.902 402.6448 459.3118 373.3962 c
460.5994 364.8567 460.3733 352.8594 458.0972 343.9751 c
454.1157 328.4351 451.8253 317.052 445.4836 302.7286 c
442.2316 295.3834 440.4047 291.9727 433.2024 283.8454 c
429.783 279.9869 420.0847 271.7396 414.18 268.006 c
393.5952 254.9901 379.0195 244.8844 354.9564 242.4272 c
330.8516 239.9659 307.3915 244.3195 284.9805 252.9494 c
274.6943 256.9104 265.7269 263.6205 257.9724 270.9966 c
247.9238 280.555 241.3404 292.2255 234.5271 304.0898 c
228.916 313.8605 225.0456 321.1837 222.342 332.5811 c
220.9313 338.5282 220.1682 338.3482 219.5025 345.3025 c
219.3714 346.6725 217.7942 355.9786 217.9033 357.4705 c
219.3849 377.7322 222.3329 397.9584 231.7803 416.3561 c
241.6676 435.6105 256.2741 451.019 276.3296 463.1002 c

1 w
519 218 m
519 502 L
147 502 L
147 218 L
519 218 L
s
333 360 m
S
U
0.5 G
0.9 g
s
u
0 G
1 w
315.25 243.2837 m
332.6281 243.2837 346.7162 257.3719 346.7162 274.75 c
346.7162 292.1281 332.6281 306.2162 315.25 306.2162 c
297.8719 306.2162 283.7837 292.1281 283.7837 274.75 c
283.7837 257.3719 297.8719 243.2837 315.25 243.2837 c
s
315.25 274.75 m
S
U
u
0 O
1 g
297.25 229.1538 m
299.7884 229.1538 301.8462 231.2116 301.8462 233.75 c
301.8462 236.2884 299.7884 238.3462 297.25 238.3462 c
294.7116 238.3462 292.6538 236.2884 292.6538 233.75 c
292.6538 231.2116 294.7116 229.1538 297.25 229.1538 c
b
297.25 233.75 m
B
U
287.25 260.25 m
288.6134 254.0917 290.2547 248.1041 292.3386 242.107 c
293.0386 240.0926 294.8542 237.5319 293.25 235.25 c
S
303.25 245.25 m
300.2539 245.7993 296.0718 243.305 297.6154 240.4474 c
297.9955 239.7437 296.8224 238.3696 298.25 238.25 c
S
[5 5 ]0 d
252.75 242.25 m
258.664 240.9836 261.547 247.4205 265.0362 250.9686 c
266.7344 252.6955 269.6408 251.8358 271.6784 250.1628 c
274.1182 248.1597 275.3096 245.2599 277.8874 243.4452 c
281.3849 240.9831 284.0838 238.4929 287.6068 236.044 c
288.8198 235.2008 289.7497 233.5129 290.8756 233.0672 c
293.164 232.1613 293.3061 235.7443 295.1807 236.8658 c
296.8085 237.8398 298.5097 236.5279 299.608 237.424 c
301.1116 238.6509 301.1391 240.9037 301.9167 242.6769 c
306.0273 252.0513 313.5664 258.6912 318.8896 267.6672 c
320.5112 270.4016 323.2564 271.9785 325.8959 273.4962 c
327.5866 274.4684 329.5489 276.0417 331.707 275.1463 c
336.3299 273.2283 336.8895 267.4032 340.9033 264.4589 c
341.5436 263.9892 343.0406 264.3504 343.6035 263.6347 c
345.8446 260.7851 350.0375 260.4355 352.5318 261.6855 c
354.1149 262.4788 353.8359 265.6374 354.5784 267.6275 c
355.8279 270.9768 360.7113 268.7542 363.1221 271.3679 c
364.0077 272.3281 364.7974 273.652 365.8314 274.023 c
369.6562 275.3953 373.6358 275.7383 377.7686 276.6674 c
380.1626 277.2057 382.3753 276.5685 384.7368 276.1717 c
387.0371 275.7851 388.4891 273.8702 390.6963 273.0967 c
396.0413 271.2236 397.273 265.1568 402.1359 262.0703 c
405.4913 259.9406 406.8644 256.2515 409.4654 253.45 c
411.0388 251.7554 413.5255 249.0275 415.4873 250.5816 c
419.2203 253.5387 421.9585 257.5892 425.9823 259.8334 c
428.043 260.9827 431.1039 258.7921 433.6878 259.4828 c
436.2015 260.1547 438.1649 262.0239 439.6448 264.3179 c
442.1959 268.2722 445.0713 271.0778 448.4355 274.0392 c
449.7495 275.1959 451.0781 276.3785 452.6849 277.3569 c
454.7496 278.6141 455.9609 280.6874 457.498 282.4676 c
458.7076 283.8685 459.8464 285.664 461.049 286.9759 c
462.3175 288.3599 463.7604 289.8671 464.4553 291.3849 c
466.6191 296.1113 459.2992 298.2679 459.2177 302.7585 c
459.1749 305.1217 461.3933 307.5939 462.2256 309.9363 c
464.3197 315.8294 459.0767 321.4387 455.2481 325.8105 c
454.4886 326.6777 452.1335 327.9752 452.9455 329.6555 c
453.8521 331.5316 455.9951 334.114 455.3001 334.7819 c
449.6488 340.2139 442.3686 344.2431 439.0581 351.3927 c
438.2255 353.1908 438.7241 355.5843 439.5496 357.8238 c
440.0445 359.1664 439.1702 361.0207 438.4363 362.0195 c
433.9695 368.0985 428.8187 372.9811 423.25 377.75 C
421.652 385.3482 424.2952 393.219 421.6201 400.7036 c
421.5143 400.9997 421.1237 400.7117 421.25 400.25 c
420.7653 402.0227 423.709 404.2798 425.0995 405.961 c
430.0927 411.9985 436.3509 416.0016 441.5706 421.9086 c
443.1517 423.698 443.9318 426.3825 445.9081 427.4599 c
448.2274 428.7242 451.201 429.2087 453.5457 430.2225 c
459.0153 432.5874 460.0046 440.4466 461.25 446.25 C
457.2742 448.9458 456.3636 454.762 457.0113 459.212 c
457.0708 459.6207 457.4615 461.0782 458.75 460.75 c
S
u
0 O
1 g
[]0 d
1 1 0 0 k
238.75 292.1538 m
241.2884 292.1538 243.3462 294.2116 243.3462 296.75 c
243.3462 299.2884 241.2884 301.3462 238.75 301.3462 c
236.2116 301.3462 234.1538 299.2884 234.1538 296.75 c
234.1538 294.2116 236.2116 292.1538 238.75 292.1538 c
b
238.75 296.75 m
B
U
u
1 1 0 0 k
404.25 258.6538 m
406.7884 258.6538 408.8462 260.7116 408.8462 263.25 c
408.8462 265.7884 406.7884 267.8462 404.25 267.8462 c
401.7116 267.8462 399.6538 265.7884 399.6538 263.25 c
399.6538 260.7116 401.7116 258.6538 404.25 258.6538 c
b
404.25 263.25 m
B
U
u
1 1 0 0 k
438.25 422.6538 m
440.7884 422.6538 442.8462 424.7116 442.8462 427.25 c
442.8462 429.7884 440.7884 431.8462 438.25 431.8462 c
435.7116 431.8462 433.6538 429.7884 433.6538 427.25 c
433.6538 424.7116 435.7116 422.6538 438.25 422.6538 c
b
438.25 427.25 m
B
U
u
1 1 0 0 k
274.25 457.6538 m
276.7884 457.6538 278.8462 459.7116 278.8462 462.25 c
278.8462 464.7884 276.7884 466.8462 274.25 466.8462 c
271.7116 466.8462 269.6538 464.7884 269.6538 462.25 c
269.6538 459.7116 271.7116 457.6538 274.25 457.6538 c
b
274.25 462.25 m
B
U
447.5 475 m
476 475 l
S
447 478.5 m
447 472 l
S
476 478.5 m
476 472 l
S

0 To
1 0 0 1 478.5 470 0 Tp
TP
0 Tr
0 O
0 g
/_Helvetica 16 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(1 km) Tx 
(\r) TX 
TO

0 To
1 0 0 1 320 485 0 Tp
TP
0 Tr
/_Helvetica-Bold 18 Tf
0 1 0 0 k
(LEP) Tx 
(\r) TX
TO

0 To
1 0 0 1 267 439 0 Tp
TP
0 Tr
/_Helvetica-Bold 16 Tf
1 1 0 0 k
(ALEPH) Tx 
(\r) TX
TO

0 To
1 0 0 1 240 308 0 Tp
TP
0 Tr
/_Helvetica-Bold 16 Tf
1 1 0 0 k
(L3) Tx 
(\r) TX
TO

0 To
1 0 0 1 360 280 0 Tp
TP
0 Tr
/_Helvetica-Bold 16 Tf
1 1 0 0 k
(DELPHI) Tx 
(\r) TX
TO

0 To
1 0 0 1 385 415 0 Tp
TP
0 Tr
/_Helvetica-Bold 16 Tf
1 1 0 0 k
(OPAL) Tx 
(\r) TX
TO

0.9 g
1 0 1 0 k
382.75 218.75 m
388.1306 224.5493 393.7327 229.8538 400.0151 234.9214 c
405.6314 239.4516 410.7833 243.6685 416.0701 248.4489 c
418.6171 250.752 420.1937 253.9351 422.963 255.9584 c
423.8613 256.6147 424.8429 257.6023 426.2339 257.8433 c
430.8334 258.6399 435.5059 257.2687 439.0476 260.4737 c
443.7609 264.7388 447.0052 269.9222 451.2709 274.7314 c
455.1202 279.0712 459.1302 282.7462 463.5258 286.42 c
467.0502 289.3656 469.8092 292.6692 473.3923 295.5745 c
473.8242 295.9247 475.4804 296.2106 475.543 295.2367 c
475.7595 291.8694 478.017 289.0272 477.5241 285.7843 c
476.8342 281.2451 471.8033 280.1713 469.449 276.6181 c
468.2602 274.8239 466.9013 273.4961 465.619 271.8522 c
457.9244 261.9879 445.4083 257.1747 441.5378 244.8165 c
441.0388 243.223 439.692 241.914 438.2375 240.7658 c
428.8796 233.3791 418.6511 229.066 410.1835 220.8183 c
409.2214 219.8813 408.0018 219.269 406.75 218.75 c
382.75 218.75 l
f

0 To
1 0 0 1 305 309 0 Tp
TP
0 Tr
0 g
/_Helvetica-Bold 12 Tf
0 1 0 0 k
(SPS) Tx 
(\r) TX 
TO

0 To
1 0 0 1 304 224.5 0 Tp
TP
0 Tr
(PS) Tx 
(\r) TX 
TO

0 To
1 0 0 1 172.5 282.5 0 Tp
TP
0 Tr
/_Times-Bold 16 Tf
0 1 1 0 k
(France) Tx 
(\r) TX 
TO

0 To
1 0 0 1 160 480 0 Tp
TP
0 Tr
/_Times-Bold 16 Tf
0 1 1 0 k
(Jura) Tx 
(\r) TX 
TO

0 To
1 0 0 1 160 460 0 Tp
TP
0 Tr
/_Times-Bold 16 Tf
0 1 1 0 k
(Mountains) Tx 
(\r) TX 
TO

0 To
1 0 0 1 426 225 0 Tp
TP
0 Tr
/_Times-Bold 13 Tf
0 1 1 0 k
(Geneva Airport) Tx 
(\r) TX 
TO

0 To
1 0 0 1 430 380 0 Tp
TP
0 Tr
/_Times-Bold 16 Tf
0 1 1 0 k
(Switzerland) Tx 
(\r) TX 
TO

%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF
